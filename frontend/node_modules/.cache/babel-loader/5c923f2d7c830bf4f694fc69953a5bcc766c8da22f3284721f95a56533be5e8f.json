{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor for debugging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`üöÄ Frontend API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.baseURL}${config.url}`);\n  return config;\n}, error => {\n  console.error('‚ùå Frontend API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling and debugging\napi.interceptors.response.use(response => {\n  console.log(`‚úÖ Frontend API Response: ${response.config.url} - ${response.status}`);\n  console.log('üìä Response data:', response.data);\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$config, _error$response3;\n  console.error('‚ùå Frontend API Response Error:', {\n    message: error.message,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url\n  });\n\n  // Provide more specific error messages\n  if (error.code === 'ECONNREFUSED') {\n    console.error('üîå Backend server is not running on localhost:5000');\n  } else if (error.code === 'ERR_NETWORK') {\n    console.error('üåê Network error - check if backend is running');\n  } else if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 404) {\n    console.error('üîç API endpoint not found');\n  }\n  return Promise.reject(error);\n});\n\n// Fetch all areas\nexport const fetchAreas = async () => {\n  try {\n    console.log('üè¢ Fetching areas from backend...');\n    const response = await api.get('/areas');\n    console.log('üè¢ Areas fetched successfully:', response.data.data);\n    return response.data.data || {}; // Returns the areas object\n  } catch (error) {\n    console.error('‚ùå Error fetching areas:', error);\n    console.warn('‚ö†Ô∏è Falling back to empty areas object');\n    // Return fallback data if API fails\n    return {};\n  }\n};\n\n// Fetch all properties\nexport const fetchProperties = async (areaKey = '') => {\n  try {\n    const url = areaKey ? `/properties/area/${areaKey}` : '/properties';\n    console.log(`üè† Fetching properties from: ${url}`);\n    const response = await api.get(url);\n    console.log('üè† Properties fetched successfully:', response.data);\n    return response.data.data || []; // Returns the properties array\n  } catch (error) {\n    console.error('‚ùå Error fetching properties:', error);\n    console.warn('‚ö†Ô∏è Falling back to empty properties array');\n    return [];\n  }\n};\n\n// Fetch properties by area\nexport const fetchPropertiesByArea = async areaKey => {\n  try {\n    console.log(`üè† Fetching properties for area: ${areaKey}`);\n    const response = await api.get(`/properties/area/${areaKey}`);\n    console.log(`üè† Properties for ${areaKey} fetched successfully:`, response.data);\n    return response.data.data || [];\n  } catch (error) {\n    console.error(`‚ùå Error fetching properties for area ${areaKey}:`, error);\n    console.warn('‚ö†Ô∏è Falling back to empty properties array');\n    return [];\n  }\n};\n\n// Fetch slider images\nexport const fetchSliderImages = async () => {\n  try {\n    console.log('üñºÔ∏è Fetching slider images from backend...');\n    const response = await api.get('/uploads/slider');\n    console.log('üñºÔ∏è Slider images fetched successfully:', response.data);\n    return response.data.data || [];\n  } catch (error) {\n    console.error('‚ùå Error fetching slider images:', error);\n    console.warn('‚ö†Ô∏è Falling back to default images');\n    // Return fallback images if API fails\n    return [{\n      title: 'Modern House',\n      imageUrl: 'https://images.unsplash.com/photo-1592394675778-4239b838fb2c?q=80&w=1074&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n      altText: 'Modern House'\n    }, {\n      title: 'Luxury Villa',\n      imageUrl: 'https://images.unsplash.com/photo-1673447620374-05f8b4842b41?q=80&w=1228&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n      altText: 'Luxury Villa'\n    }];\n  }\n};\n\n// Health check\nexport const checkBackendHealth = async () => {\n  try {\n    console.log('üîç Checking backend health...');\n    const response = await api.get('/health');\n    console.log('‚úÖ Backend health check passed:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('‚ùå Backend health check failed:', error);\n    throw new Error('Backend server is not responding');\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","data","_error$response","_error$response2","_error$config","_error$response3","message","code","fetchAreas","get","warn","fetchProperties","areaKey","fetchPropertiesByArea","fetchSliderImages","title","imageUrl","altText","checkBackendHealth","Error"],"sources":["C:/Users/Tejas Jaiswal/Desktop/OM/property-dealing-website/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor for debugging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`üöÄ Frontend API Request: ${config.method?.toUpperCase()} ${config.baseURL}${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('‚ùå Frontend API Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor for error handling and debugging\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`‚úÖ Frontend API Response: ${response.config.url} - ${response.status}`);\r\n    console.log('üìä Response data:', response.data);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('‚ùå Frontend API Response Error:', {\r\n      message: error.message,\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      url: error.config?.url\r\n    });\r\n    \r\n    // Provide more specific error messages\r\n    if (error.code === 'ECONNREFUSED') {\r\n      console.error('üîå Backend server is not running on localhost:5000');\r\n    } else if (error.code === 'ERR_NETWORK') {\r\n      console.error('üåê Network error - check if backend is running');\r\n    } else if (error.response?.status === 404) {\r\n      console.error('üîç API endpoint not found');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Fetch all areas\r\nexport const fetchAreas = async () => {\r\n  try {\r\n    console.log('üè¢ Fetching areas from backend...');\r\n    const response = await api.get('/areas');\r\n    console.log('üè¢ Areas fetched successfully:', response.data.data);\r\n    return response.data.data || {}; // Returns the areas object\r\n  } catch (error) {\r\n    console.error('‚ùå Error fetching areas:', error);\r\n    console.warn('‚ö†Ô∏è Falling back to empty areas object');\r\n    // Return fallback data if API fails\r\n    return {};\r\n  }\r\n};\r\n\r\n// Fetch all properties\r\nexport const fetchProperties = async (areaKey = '') => {\r\n  try {\r\n    const url = areaKey ? `/properties/area/${areaKey}` : '/properties';\r\n    console.log(`üè† Fetching properties from: ${url}`);\r\n    const response = await api.get(url);\r\n    console.log('üè† Properties fetched successfully:', response.data);\r\n    return response.data.data || []; // Returns the properties array\r\n  } catch (error) {\r\n    console.error('‚ùå Error fetching properties:', error);\r\n    console.warn('‚ö†Ô∏è Falling back to empty properties array');\r\n    return [];\r\n  }\r\n};\r\n\r\n// Fetch properties by area\r\nexport const fetchPropertiesByArea = async (areaKey) => {\r\n  try {\r\n    console.log(`üè† Fetching properties for area: ${areaKey}`);\r\n    const response = await api.get(`/properties/area/${areaKey}`);\r\n    console.log(`üè† Properties for ${areaKey} fetched successfully:`, response.data);\r\n    return response.data.data || [];\r\n  } catch (error) {\r\n    console.error(`‚ùå Error fetching properties for area ${areaKey}:`, error);\r\n    console.warn('‚ö†Ô∏è Falling back to empty properties array');\r\n    return [];\r\n  }\r\n};\r\n\r\n// Fetch slider images\r\nexport const fetchSliderImages = async () => {\r\n  try {\r\n    console.log('üñºÔ∏è Fetching slider images from backend...');\r\n    const response = await api.get('/uploads/slider');\r\n    console.log('üñºÔ∏è Slider images fetched successfully:', response.data);\r\n    return response.data.data || [];\r\n  } catch (error) {\r\n    console.error('‚ùå Error fetching slider images:', error);\r\n    console.warn('‚ö†Ô∏è Falling back to default images');\r\n    // Return fallback images if API fails\r\n    return [\r\n      {\r\n        title: 'Modern House',\r\n        imageUrl: 'https://images.unsplash.com/photo-1592394675778-4239b838fb2c?q=80&w=1074&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n        altText: 'Modern House'\r\n      },\r\n      {\r\n        title: 'Luxury Villa',\r\n        imageUrl: 'https://images.unsplash.com/photo-1673447620374-05f8b4842b41?q=80&w=1228&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n        altText: 'Luxury Villa'\r\n      }\r\n    ];\r\n  }\r\n};\r\n\r\n// Health check\r\nexport const checkBackendHealth = async () => {\r\n  try {\r\n    console.log('üîç Checking backend health...');\r\n    const response = await api.get('/health');\r\n    console.log('‚úÖ Backend health check passed:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('‚ùå Backend health check failed:', error);\r\n    throw new Error('Backend server is not responding');\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EAAA,IAAAC,cAAA;EACVC,OAAO,CAACC,GAAG,CAAC,6BAAAF,cAAA,GAA4BD,MAAM,CAACI,MAAM,cAAAH,cAAA,uBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,IAAIL,MAAM,CAACT,OAAO,GAAGS,MAAM,CAACM,GAAG,EAAE,CAAC;EACtG,OAAON,MAAM;AACf,CAAC,EACAO,KAAK,IAAK;EACTL,OAAO,CAACK,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;EACrD,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAlB,GAAG,CAACQ,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC1BW,QAAQ,IAAK;EACZR,OAAO,CAACC,GAAG,CAAC,4BAA4BO,QAAQ,CAACV,MAAM,CAACM,GAAG,MAAMI,QAAQ,CAACC,MAAM,EAAE,CAAC;EACnFT,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEO,QAAQ,CAACE,IAAI,CAAC;EAC/C,OAAOF,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAM,eAAA,EAAAC,gBAAA,EAAAC,aAAA,EAAAC,gBAAA;EACTd,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAE;IAC9CU,OAAO,EAAEV,KAAK,CAACU,OAAO;IACtBN,MAAM,GAAAE,eAAA,GAAEN,KAAK,CAACG,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBF,MAAM;IAC9BC,IAAI,GAAAE,gBAAA,GAAEP,KAAK,CAACG,QAAQ,cAAAI,gBAAA,uBAAdA,gBAAA,CAAgBF,IAAI;IAC1BN,GAAG,GAAAS,aAAA,GAAER,KAAK,CAACP,MAAM,cAAAe,aAAA,uBAAZA,aAAA,CAAcT;EACrB,CAAC,CAAC;;EAEF;EACA,IAAIC,KAAK,CAACW,IAAI,KAAK,cAAc,EAAE;IACjChB,OAAO,CAACK,KAAK,CAAC,oDAAoD,CAAC;EACrE,CAAC,MAAM,IAAIA,KAAK,CAACW,IAAI,KAAK,aAAa,EAAE;IACvChB,OAAO,CAACK,KAAK,CAAC,gDAAgD,CAAC;EACjE,CAAC,MAAM,IAAI,EAAAS,gBAAA,GAAAT,KAAK,CAACG,QAAQ,cAAAM,gBAAA,uBAAdA,gBAAA,CAAgBL,MAAM,MAAK,GAAG,EAAE;IACzCT,OAAO,CAACK,KAAK,CAAC,2BAA2B,CAAC;EAC5C;EAEA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACFjB,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAChD,MAAMO,QAAQ,GAAG,MAAMrB,GAAG,CAAC+B,GAAG,CAAC,QAAQ,CAAC;IACxClB,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEO,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;IACjE,OAAOF,QAAQ,CAACE,IAAI,CAACA,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;EACnC,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/CL,OAAO,CAACmB,IAAI,CAAC,uCAAuC,CAAC;IACrD;IACA,OAAO,CAAC,CAAC;EACX;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAOC,OAAO,GAAG,EAAE,KAAK;EACrD,IAAI;IACF,MAAMjB,GAAG,GAAGiB,OAAO,GAAG,oBAAoBA,OAAO,EAAE,GAAG,aAAa;IACnErB,OAAO,CAACC,GAAG,CAAC,gCAAgCG,GAAG,EAAE,CAAC;IAClD,MAAMI,QAAQ,GAAG,MAAMrB,GAAG,CAAC+B,GAAG,CAACd,GAAG,CAAC;IACnCJ,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEO,QAAQ,CAACE,IAAI,CAAC;IACjE,OAAOF,QAAQ,CAACE,IAAI,CAACA,IAAI,IAAI,EAAE,CAAC,CAAC;EACnC,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpDL,OAAO,CAACmB,IAAI,CAAC,2CAA2C,CAAC;IACzD,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,qBAAqB,GAAG,MAAOD,OAAO,IAAK;EACtD,IAAI;IACFrB,OAAO,CAACC,GAAG,CAAC,oCAAoCoB,OAAO,EAAE,CAAC;IAC1D,MAAMb,QAAQ,GAAG,MAAMrB,GAAG,CAAC+B,GAAG,CAAC,oBAAoBG,OAAO,EAAE,CAAC;IAC7DrB,OAAO,CAACC,GAAG,CAAC,qBAAqBoB,OAAO,wBAAwB,EAAEb,QAAQ,CAACE,IAAI,CAAC;IAChF,OAAOF,QAAQ,CAACE,IAAI,CAACA,IAAI,IAAI,EAAE;EACjC,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,wCAAwCgB,OAAO,GAAG,EAAEhB,KAAK,CAAC;IACxEL,OAAO,CAACmB,IAAI,CAAC,2CAA2C,CAAC;IACzD,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACFvB,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IACzD,MAAMO,QAAQ,GAAG,MAAMrB,GAAG,CAAC+B,GAAG,CAAC,iBAAiB,CAAC;IACjDlB,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEO,QAAQ,CAACE,IAAI,CAAC;IACrE,OAAOF,QAAQ,CAACE,IAAI,CAACA,IAAI,IAAI,EAAE;EACjC,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvDL,OAAO,CAACmB,IAAI,CAAC,mCAAmC,CAAC;IACjD;IACA,OAAO,CACL;MACEK,KAAK,EAAE,cAAc;MACrBC,QAAQ,EAAE,wKAAwK;MAClLC,OAAO,EAAE;IACX,CAAC,EACD;MACEF,KAAK,EAAE,cAAc;MACrBC,QAAQ,EAAE,wKAAwK;MAClLC,OAAO,EAAE;IACX,CAAC,CACF;EACH;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C,IAAI;IACF3B,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5C,MAAMO,QAAQ,GAAG,MAAMrB,GAAG,CAAC+B,GAAG,CAAC,SAAS,CAAC;IACzClB,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEO,QAAQ,CAACE,IAAI,CAAC;IAC5D,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAM,IAAIuB,KAAK,CAAC,kCAAkC,CAAC;EACrD;AACF,CAAC;AAED,eAAezC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}