{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tejas Jaiswal\\\\Desktop\\\\OM\\\\property-dealing-website\\\\src\\\\components\\\\ScrollToTop.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ScrollToTop.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollToTop = () => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {\n    // Check scroll position\n    const toggleVisibility = () => {\n      if (window.pageYOffset > 300) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    // Check if modal is open\n    const checkModalState = () => {\n      const modalOpen = document.body.classList.contains('modal-open');\n      setIsModalOpen(modalOpen);\n    };\n\n    // Add scroll listener\n    window.addEventListener('scroll', toggleVisibility);\n\n    // Check modal state periodically\n    const modalChecker = setInterval(checkModalState, 100);\n\n    // Initial checks\n    toggleVisibility();\n    checkModalState();\n    return () => {\n      window.removeEventListener('scroll', toggleVisibility);\n      clearInterval(modalChecker);\n    };\n  }, []);\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `scroll-to-top ${isVisible && !isModalOpen ? 'visible' : ''}`,\n    onClick: scrollToTop,\n    \"aria-label\": \"Scroll to top\",\n    children: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-chevron-up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollToTop, \"nw+mpH8ghZlVOX1CA09G6TdZ+jw=\");\n_c = ScrollToTop;\nexport default ScrollToTop;\nvar _c;\n$RefreshReg$(_c, \"ScrollToTop\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ScrollToTop","_s","isVisible","setIsVisible","isModalOpen","setIsModalOpen","toggleVisibility","window","pageYOffset","checkModalState","modalOpen","document","body","classList","contains","addEventListener","modalChecker","setInterval","removeEventListener","clearInterval","scrollToTop","scrollTo","top","behavior","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Tejas Jaiswal/Desktop/OM/property-dealing-website/src/components/ScrollToTop.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ScrollToTop.css';\r\n\r\nconst ScrollToTop = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check scroll position\r\n    const toggleVisibility = () => {\r\n      if (window.pageYOffset > 300) {\r\n        setIsVisible(true);\r\n      } else {\r\n        setIsVisible(false);\r\n      }\r\n    };\r\n\r\n    // Check if modal is open\r\n    const checkModalState = () => {\r\n      const modalOpen = document.body.classList.contains('modal-open');\r\n      setIsModalOpen(modalOpen);\r\n    };\r\n\r\n    // Add scroll listener\r\n    window.addEventListener('scroll', toggleVisibility);\r\n    \r\n    // Check modal state periodically\r\n    const modalChecker = setInterval(checkModalState, 100);\r\n\r\n    // Initial checks\r\n    toggleVisibility();\r\n    checkModalState();\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', toggleVisibility);\r\n      clearInterval(modalChecker);\r\n    };\r\n  }, []);\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`scroll-to-top ${isVisible && !isModalOpen ? 'visible' : ''}`}\r\n      onClick={scrollToTop}\r\n      aria-label=\"Scroll to top\"\r\n    >\r\n      <i className=\"fas fa-chevron-up\"></i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,IAAIC,MAAM,CAACC,WAAW,GAAG,GAAG,EAAE;QAC5BL,YAAY,CAAC,IAAI,CAAC;MACpB,CAAC,MAAM;QACLA,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;;IAED;IACA,MAAMM,eAAe,GAAGA,CAAA,KAAM;MAC5B,MAAMC,SAAS,GAAGC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,YAAY,CAAC;MAChET,cAAc,CAACK,SAAS,CAAC;IAC3B,CAAC;;IAED;IACAH,MAAM,CAACQ,gBAAgB,CAAC,QAAQ,EAAET,gBAAgB,CAAC;;IAEnD;IACA,MAAMU,YAAY,GAAGC,WAAW,CAACR,eAAe,EAAE,GAAG,CAAC;;IAEtD;IACAH,gBAAgB,CAAC,CAAC;IAClBG,eAAe,CAAC,CAAC;IAEjB,OAAO,MAAM;MACXF,MAAM,CAACW,mBAAmB,CAAC,QAAQ,EAAEZ,gBAAgB,CAAC;MACtDa,aAAa,CAACH,YAAY,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxBb,MAAM,CAACc,QAAQ,CAAC;MACdC,GAAG,EAAE,CAAC;MACNC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;EAED,oBACExB,OAAA;IACEyB,SAAS,EAAE,iBAAiBtB,SAAS,IAAI,CAACE,WAAW,GAAG,SAAS,GAAG,EAAE,EAAG;IACzEqB,OAAO,EAAEL,WAAY;IACrB,cAAW,eAAe;IAAAM,QAAA,eAE1B3B,OAAA;MAAGyB,SAAS,EAAC;IAAmB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEb,CAAC;AAAC7B,EAAA,CApDID,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAsDjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}